generator client {
  provider = "prisma-client-js"
  output   = "../app/infra/datasource/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pages          Page[]
  componentTypes ComponentType[]
}

model Page {
  id        String   @id @default(uuid())
  projectId String
  level     Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project  Project    @relation(fields: [projectId], references: [id])
  Instance Instance[]

  @@unique([projectId, level])
  @@unique([projectId, name])
}

model ComponentType {
  id        String   @id @default(uuid())
  projectId String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  components Commponent[]
  project    Project      @relation(fields: [projectId], references: [id])
}

model Commponent {
  id              String   @id @default(uuid())
  componentTypeId String
  name            String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  componentType ComponentType @relation(fields: [componentTypeId], references: [id])
  instances     Instance[]
}

model Instance {
  id          String   @id @default(uuid())
  pageId      String
  componentId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  page       Page       @relation(fields: [pageId], references: [id])
  commponent Commponent @relation(fields: [componentId], references: [id])
  relations  Relation[]

  connectedTo Connection[]
  childOf     Dependant[]
}

enum RelationType {
  Connection
  Dependency
}

model Relation {
  id           String       @id @default(uuid())
  relationType RelationType
  instanceId   String
  createdAt    DateTime     @default(now())

  connections Connection[]
  dependants  Dependant[]
  instance    Instance     @relation(fields: [instanceId], references: [id])
}

model Connection {
  relationId String   @unique
  id         String   @id @default(uuid())
  toId       String
  createdAt  DateTime @default(now())

  relation Relation @relation(fields: [relationId], references: [id])
  to       Instance @relation(fields: [toId], references: [id])
}

model Dependant {
  relationId String
  id         String   @id @default(uuid())
  childId    String
  createdAt  DateTime @default(now())

  child    Instance @relation(fields: [childId], references: [id])
  Relation Relation @relation(fields: [relationId], references: [id])

  @@unique([relationId, childId])
}
